#!/usr/bin/env python3
"""
Display the artist name and title of the currently playing song
"""

import gi
import sys

gi.require_version('Playerctl', '2.0')

from gi.repository import Playerctl, GLib  # noqa

manager = Playerctl.PlayerManager()


def on_play(player, status, manager):
    artist = player.get_artist()
    title = player.get_title()
    print(' {}{}'.format((artist + ' - ') if artist != '' else '', title))


def on_pause(player, status, manager):
    artist = player.get_artist()
    title = player.get_title()
    print(' {}{}'.format((artist + ' - ') if artist != '' else '', title))


def on_stop(player, status, manager):
    print()


def on_metadata(player, metadata, manager):
    keys = metadata.keys()
    if 'xesam:artist' in keys and 'xesam:title' in keys:
        artist = metadata['xesam:artist']
        title = metadata['xesam:title']
        print(' {} - {}'.format(artist, title))


def init_player(name):
    # choose if you want to manage the player based on the name
    player = Playerctl.Player.new_from_name(name)
    player.connect('playback-status::playing', on_play, manager)
    player.connect('playback-status::paused', on_pause, manager)
    player.connect('playback-status::stopped', on_stop, manager)
    player.connect('metadata', on_metadata, manager)
    manager.manage_player(player)
    _status = player.get_property('playback-status')
    status = _status.value_nick
    if (status == 'Stopped'):
        print()
    if (status == 'Playing'):
        on_play(player, _status, manager)
    if (status == 'Paused'):
        on_pause(player, _status, manager)


def on_name_appeared(manager, name):
    init_player(name)


manager.connect('name-appeared', on_name_appeared)

for name in manager.props.player_names:
    init_player(name)

main = GLib.MainLoop()
try:
    main.run()
except KeyboardInterrupt:
    sys.exit(0)
